namespace MailChimpWrapper.Model
{
    /// <summary>
    /// Class that represents the error from mailchimp response
    /// </summary>
    public class ErrorModel
    {
        /// <summary>
        /// An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.
        /// </summary>
        public string type { get; set; }
        /// <summary>
        /// A short, human-readable summary of the problem type. It shouldn’t change based on the occurrence of the problem, except for purposes of localization.
        /// </summary>
        public string title { get; set; }
        /// <summary>
        /// The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.
        /// </summary>
        public int status { get; set; }
        /// <summary>
        /// A human-readable explanation specific to this occurrence of the problem. Learn more about errors.
        /// </summary>
        public string detail { get; set; }
        /// <summary>
        /// A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.
        /// </summary>
        public string instance { get; set; }
        /// <summary>
        /// Detailed errors that happened
        /// </summary>
        public ErrorDetailModel[] errors { get; set; }
        /// <summary>
        /// Get the string representation from the entire errorModel
        /// </summary>
        /// <returns></returns>
        public override string ToString()
        {
            string result = "Type: " + type +
                            " Title: " + title +
                            " Status: " + status +
                            " Detail: " + detail +
                            " Instance: " + instance;
            if (errors != null)
            {
                foreach (var error in errors)
                {
                    result += " Error: {field: " + error.field + " message: " + error.message + "}";
                }
            }            
            return result;
        }
    }
}
